#!/bin/bash
#
# Perform necessary puppet removal steps
# before package is uninstalled.
#

prefix="contegix-"
puppet_services="puppet-agent "
install_base="/opt/contegix/puppet"
if [ -f /etc/redhat-release ]; then
        os_family="RedHat"
        os_major_rev="$(perl -pe 's/.*release (\d+)\.\d+.*/$1/' /etc/redhat-release)"
else   
        os_family="Unknown"
        os_major_rev="Unknown"
fi

# upgrade

# uninstall
if [ "${1}" -eq "0" ] ; then

	# Disable and stop puppet services
	for service in $puppet_services; do
		service="${prefix}${service}"
		if [ "${OS_MAJOR_REV}" == "7" -a "${OS_FAMILY}" == "RedHat" ] ; then
			if [ -e /etc/systemd/system/${prefix}puppet-agent.service ] ; then
		 		systemctl status ${prefix}puppet-agent 2>&1 > /dev/null && systemctl stop ${prefix}puppet-agent	
				systemctl disable ${prefix}puppet-agent
				rm -f /etc/systemd/system/${prefix}puppet-agent.service
				systemctl daemon-reload
			fi
		else		
			if [ -e /etc/init.d/${service} ] ; then
				/etc/init.d/${service} status 2>&1 > /dev/null && /etc/init.d/${service} stop
				chkconfig ${service} off
				chkconfig --del ${service}
				rm -f /etc/init.d/${service}
			fi
		fi
	done
        # unlink logroate config
        [ -h /etc/logrotate.d/${prefix}puppet ] && rm -f /etc/logrotate.d/${prefix}puppet
        # unlink cron config
        [ -h /etc/cron.hourly/${prefix}puppet-agent ] && rm -f /etc/cron.hourly/${prefix}puppet-agent
fi
exit 0
